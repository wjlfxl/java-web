<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean id="userService" class="com.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.log.BeforeLog"/>
    <bean id="afterLog" class="com.log.AfterLog"/>

<!--   方式一:使用原生Spring API接口-->
<!--    配置aop:需要导入aop的约束-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;切入点:expression:表达式，execution(要执行的位置!修饰符 返回值 类型 方法名 参数) &ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.service.UserServiceImpl.*(..))"/>-->

<!--        &lt;!&ndash;执行环绕增加! &ndash;&gt;-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->



<!--    &lt;!&ndash;   方式二:自定义类&ndash;&gt;-->
<!--    <bean id="diy" class="com.Diy.DiyPointCut"/>-->
<!--        <aop:config>-->
<!--            &lt;!&ndash;自定义切面,ref要引用的类&ndash;&gt;-->
<!--            <aop:aspect ref="diy">-->
<!--                &lt;!&ndash;切入点&ndash;&gt;-->
<!--                <aop:pointcut id="point" expression="execution(* com.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;                通知&ndash;&gt;-->
<!--                <aop:after method="After" pointcut-ref="point"/>-->
<!--                <aop:before method="Before" pointcut-ref="point"/>-->
<!--            </aop:aspect>-->
<!--        </aop:config>-->


    <!--   方式三:注解-->
    <bean id="annotationPointCut" class="com.Diy.AnnotationPointCut"/>
<!--    开启注解支持-->
    <aop:aspectj-autoproxy/>

</beans>